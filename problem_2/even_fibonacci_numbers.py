# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

def fibonacci_even_sum(limit: int) -> int:
    first, second = 1, 2
    last_two_fibonacci = [first, second]
    total_sum = 2  # Starts at 2 because we only care about even numbers

    while last_two_fibonacci[-1] < limit:

        new_fibonacci = sum(last_two_fibonacci[-2:])
        if new_fibonacci > limit:
            break
        if new_fibonacci % 2 == 0:
            total_sum += new_fibonacci

        last_two_fibonacci.append(new_fibonacci)
        last_two_fibonacci.pop(0)

    return total_sum


print(fibonacci_even_sum(4_000_000))




